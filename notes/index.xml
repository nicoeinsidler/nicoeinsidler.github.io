<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on Nico Einsidler.</title><link>https://ne555.io/notes/</link><description>Recent content in Notes on Nico Einsidler.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 23 Apr 2022 13:26:34 +0200</lastBuildDate><atom:link href="https://ne555.io/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>ZFS Disk Replacement &amp; Pool Augmentation</title><link>https://ne555.io/notes/zfs-hdd-replacement-augmentation/</link><pubDate>Sat, 23 Apr 2022 13:26:34 +0200</pubDate><guid>https://ne555.io/notes/zfs-hdd-replacement-augmentation/</guid><description>&lt;p>My home server where I mainly store all my pictures and some &lt;a href="https://ne555.io/projects/vienna-sessions/" title="Vienna Sessions">Vienna Sessions&lt;/a> backups uses the &lt;a href="https://en.wikipedia.org/wiki/ZFS">Zettabyte File System&lt;/a> (ZFS). A few weeks back one of my weekly scrubs revealed a failing hard drive in one of the three mirror pools I have created.&lt;/p>
&lt;p>As I recently upgraded from my beloved Canon 60D to a Fujifilm X-E3, file sizes will dramatically increase. So why not upgrade the disks while replacing them anyways. The steps to do this for a ZFS mirror pool are failry simple, first you replace the faulty disk, resilver the pool and then repeating this procedure with the second disk, here is a condensed protocol (&lt;strong>TL;DR&lt;/strong>):&lt;/p></description></item><item><title>qRAM</title><link>https://ne555.io/notes/qram/</link><pubDate>Sun, 20 Feb 2022 13:52:46 +0100</pubDate><guid>https://ne555.io/notes/qram/</guid><description>&lt;p>A concept of a quantum random access memory was &lt;a href="https://arxiv.org/pdf/0708.1879.pdf">first proposed in 2007&lt;/a>. It offers a way to randomly address $N=2^n$ data cells with $n$ bits.&lt;/p>
&lt;h2 id="basic-idea">Basic Idea&lt;/h2>
&lt;p>The basic idea of qRAM is to use address qubits to point to some data in a data qubit register. Encoding of the information in the data register can be done by using controlled gates on the data register (if the information is consisting of only 0&amp;rsquo;s and 1&amp;rsquo;s CNOT gates are used). The address qubit register acts now as the controlling qubits.&lt;/p></description></item><item><title>WezTerm</title><link>https://ne555.io/notes/wezterm/</link><pubDate>Sun, 23 Jan 2022 15:14:57 +0100</pubDate><guid>https://ne555.io/notes/wezterm/</guid><description>&lt;p>I found a new terminal: &lt;a href="https://wezfurlong.org/wezterm/">WezTerm&lt;/a>. Not as fast as Alacritty it&amp;rsquo;s still GPU accelerated and has some great features.&lt;/p>
&lt;p>&lt;img src="https://ne555.io/img/wezterm/wezterm.png" alt="WezTerm on Fedora with GNOME looks great. This picture shows both the dark and light Adwaita theme.">&lt;/p>
&lt;p>WezTerm combines two important aspects: Alacritties speed and iTerms/GNOME Terminals tabs. It sure isn&amp;rsquo;t as fast as Alacritty, but in my daily usage, I hardly notice any differences.&lt;/p>
&lt;p>Noteworthy features:&lt;/p>
&lt;ul>
&lt;li>GPU accelerated&lt;/li>
&lt;li>tabs&lt;/li>
&lt;li>good font support (it supports ligatures as well)&lt;/li>
&lt;li>easy theming&lt;/li>
&lt;li>simple configuration (via a &lt;code>wezterm.lua&lt;/code> file in &lt;code>$HOME/.config/wezterm&lt;/code> or just in &lt;code>$HOME&lt;/code>.)&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://ne555.io/img/wezterm/ligatures.png" alt="Font ligatures specifically designed for code, make it easier for the programmer to work. WezTerm has fantastic support for ligatures and renders fonts beautifully.">&lt;/p></description></item><item><title>Podman All the Things</title><link>https://ne555.io/notes/podman-all-the-things/</link><pubDate>Sun, 05 Dec 2021 01:33:10 +0100</pubDate><guid>https://ne555.io/notes/podman-all-the-things/</guid><description>&lt;p>A few days ago while browsing &lt;a href="https://lobste.rs/">lobste.rs&lt;/a> I stumbled upon the article &lt;a href="https://nystudio107.com/blog/dock-life-using-docker-for-all-the-things">&amp;ldquo;Dock Life: Using Docker for All The Things!&amp;rdquo;&lt;/a> written by Andrew Welch. It had then gotten onto the upper half of the first page on lobste.rs and a few days ago even Chris Coyer from &lt;a href="https://css-tricks.com/dock-life-using-docker-for-all-the-things/">CSS-Tricks.com wrote about it&lt;/a>.&lt;/p>
&lt;p>Just coming from NixOS and Fedora Silverblue, I was immediately hooked. This is actually an amazing idea!&lt;/p>
&lt;h2 id="basic-idea">Basic Idea&lt;/h2>
&lt;p>The basic idea behind Andrew Welch&amp;rsquo;s article is simple: If you ever need to run a certain program, grab a container that already includes the desired program and remap the program name on your system to a &lt;code>docker run&lt;/code> command.&lt;/p></description></item><item><title>Selling Products</title><link>https://ne555.io/notes/selling-products/</link><pubDate>Thu, 25 Nov 2021 20:07:38 +0100</pubDate><guid>https://ne555.io/notes/selling-products/</guid><description>&lt;p>Selling stuff is just a byproduct of creating cool products.&lt;/p></description></item><item><title>DNF Config</title><link>https://ne555.io/notes/dnf-config/</link><pubDate>Thu, 25 Nov 2021 19:07:18 +0100</pubDate><guid>https://ne555.io/notes/dnf-config/</guid><description>&lt;p>The DNF package manager posses a config file under &lt;code>/etc/dnf/dnf.config&lt;/code>. A few interesting options are available and not set per default.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># force the usage of fastest mirror available&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">fastestmirror&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="nx">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># enable parallel downloads to speed up downloads&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">max_parallel_downloads&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="mi">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># enable colored output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">color&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="s2">&amp;#34;always&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>